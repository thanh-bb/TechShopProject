@page "/createNew"

@using Microsoft.AspNetCore.Components.Authorization;
@using TechShop.Models.Dtos;
@using TechShop.Web.Services.Contracts
@using Microsoft.AspNetCore.Hosting;
@using Microsoft.AspNetCore.Http;
@using TechShop.Models.Enums;


@inject NavigationManager NavigationManager
@inject ICategoryService CategoryService
@inject IProductService ProductService
@inject IUserService UserService

@inject IToastService ToastService

<link rel="shortcut icon" type="image/png" href="./assets/img/favicon.png">
<!-- google font -->
<link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,700" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Poppins:400,700&display=swap" rel="stylesheet">
<!-- fontawesome -->
<link rel="stylesheet" href="./assets/css/all.min.css">
<!-- bootstrap -->
<link rel="stylesheet" href="./assets/bootstrap/css/bootstrap.min.css">
<!-- owl carousel -->
<link rel="stylesheet" href="./assets/css/owl.carousel.css">
<!-- magnific popup -->
<link rel="stylesheet" href="./assets/css/magnific-popup.css">
<!-- animate css -->
<link rel="stylesheet" href="./assets/css/animate.css">
<!-- mean menu css -->
<link rel="stylesheet" href="./assets/css/meanmenu.min.css">
<!-- main style -->
<link rel="stylesheet" href="./assets/css/main.css">
<!-- responsive -->
<link rel="stylesheet" href="./assets/css/responsive.css">

<link rel="stylesheet" href="./assets/css/style.css">

<link rel="stylesheet" type="text/css" href="./login/css/main.css" />
<link rel="stylesheet" type="text/css" href="./login/css/util.css" />
<link rel="stylesheet" type="text/css" href="./login/css/style.css" />

@if (Loais == null)
{
    <DisplaySpinner />
}

else
{

    <div class="limiter">
        <div class="container-login" style="background-image: url('');">

            <div class="card card-5 m-t-100">
                <div class="card-heading">
                    <h2 class="title">Create</h2>
                </div>
                <div class="card-body">
                    <form method="POST">
                        <EditForm Model="@productCr" OnValidSubmit="SubmitProduct">
                            <DataAnnotationsValidator />
                            <div class="form-row m-b-20">
                                <div class="name">Loại sản phẩm</div>
                                <div class="value">
                                    <div class="input-group">
                                        <InputSelect id="category" class="form-control" @bind-Value="productCr.MaLoai">
                                            <option>Chọn loại sản phẩm</option>
                                            @foreach (var item in Loais)
                                            {
                                                <option value="@item.MaLoai">@item.TenLoai</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage For="()=>productCr.MaLoai"></ValidationMessage>
                                    </div>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="name">Tên sản phẩm</div>
                                <div class="value">
                                    <div class="input-group">
                                        <InputText id="name" class="form-control" @bind-Value="productCr.TenSP"></InputText>
                                        <ValidationMessage For="()=>productCr.TenSP"></ValidationMessage>
                                    </div>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="name">Người đăng</div>
                                <div class="value">
                                    <div class="input-group">
                                        <InputSelect id="user" class="form-control" @bind-Value="productCr.Id">
                                            @foreach (var item in Users)
                                            {
                                                <option value="@item.Id">@item.TenKH</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage For="()=>productCr.Id"></ValidationMessage>
                                    </div>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="name">Mô tả</div>
                                <div class="value">
                                    <div class="input-group">
                                        <InputText id="describe" class="form-control" @bind-Value="productCr.MoTa"></InputText>
                                        <ValidationMessage For="()=>productCr.MoTa"></ValidationMessage>
                                    </div>
                                </div>
                            </div>

                            <div class="form-row ">
                                <div class="name">Số lượng</div>
                                <div class="value">
                                    <div class="input-group">
                                        <InputNumber id="quanlity" class="form-control" @bind-Value="productCr.SoLuong"></InputNumber>
                                        <ValidationMessage For="()=>productCr.SoLuong"></ValidationMessage>
                                    </div>
                                </div>
                            </div>
                            <div class="form-row ">
                                <div class="name ">Giá tiền</div>
                                <div class="value">
                                    <div class="input-group">
                                        <InputNumber id="price" class="form-control " @bind-Value="productCr.GiaSP"></InputNumber>
                                        <ValidationMessage For="()=>productCr.GiaSP"></ValidationMessage>
                                    </div>
                                </div>
                            </div>


                            @*  <div class="form-row">
                        <div class="name">Tình trạng hàng</div>
                        <div class="value">
                        <div class="input-group">
                        <InputSelect id="status" class="form-control" @bind-Value="productCr.MaTinhTrang">
                        <option> Chọn tình trạng hàng</option>
                        @foreach (var item in TinhTrang)
                        {
                        <option value="@item.MaTinhTrang">@item.TenTinhTrang</option>
                        }
                        </InputSelect>
                        <ValidationMessage For="()=>productCr.MaTinhTrang"></ValidationMessage>
                        </div>
                        </div>
                        </div> *@

                            <div class="form-group">
                                <label for="status">Trạng thái</label>
                                <InputSelect id="status" class="form-control" @bind-Value="productCr.Status">
                                    <option>Chọn tình trạng hàng</option>
                                    @foreach (string item in Enum.GetNames(typeof(Status)))
                                    {
                                        <option value="@item">@item</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="()=>productCr.Status"></ValidationMessage>
                            </div>
                            <div class="form-row">
                                <div class="name">Ảnh</div>
                                <div class="value">
                                    <div class="input-group">
                                        <div class="form-control-file">

                                            <InputFile id="image" OnChange="OnFileChange" @bind-Value="productCr.ImageURL" class="form-control"></InputFile>
                                            <ValidationMessage For="()=>productCr.ImageURL"></ValidationMessage>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="d-flex justify-content-center">
                                <button type="submit" class="btn btn--radius-2 btn--red">Submit</button>

                            </div>

                        </EditForm>
                    </form>


                </div>
            </div>
        </div>
        @* <EditForm Model="@productCr" OnValidSubmit="SubmitProduct">
    <DataAnnotationsValidator />

    <div class="form-group">
    <label for="name">Tên sản phẩm</label>
    <InputText id="name" class="form-control" @bind-Value="productCr.TenSP"></InputText>
    <ValidationMessage For="()=>productCr.TenSP"></ValidationMessage>

    <small id="namelHelp" class="form-text text-muted">Nhập tên sản phẩm có dấu và đúng chính tả dùm em.</small>
    </div>


    <div class="form-group">
    <label for="category">Loại sản phẩm</label>
    <InputSelect id="category" class="form-control" @bind-Value="productCr.MaLoai">
    <option>Chọn loại sản phẩm</option>
    @foreach (var item in Loais)
    {
    <option value="@item.MaLoai">@item.TenLoai</option>
    }
    </InputSelect>
    <ValidationMessage For="()=>productCr.MaLoai"></ValidationMessage>
    </div>

    <div class="form-group">
    <label for="user">Người đăng</label>
    <InputSelect id="user" class="form-control" @bind-Value="productCr.NgDang">
    @foreach (var item in Users)
    {
    <option value="@item.Id">@item.TenKH</option>
    }
    </InputSelect>
    <ValidationMessage For="()=>productCr.NgDang"></ValidationMessage>
    </div>

    <div class="form-group">
    <label for="describe">Mô tả</label>
    <InputText id="describe" class="form-control" @bind-Value="productCr.MoTa"></InputText>
    <ValidationMessage For="()=>productCr.MoTa"></ValidationMessage>
    </div>

    <div class="form-group">
    <label for="quanlity">Số lượng</label>
    <InputNumber id="quanlity" class="form-control" @bind-Value="productCr.SoLuong"></InputNumber>
    <ValidationMessage For="()=>productCr.SoLuong"></ValidationMessage>
    </div>

    <div class="form-group">
    <label for="price">Giá sản phẩm</label>
    <InputNumber id="price" class="form-control" @bind-Value="productCr.GiaSP"></InputNumber>
    <ValidationMessage For="()=>productCr.GiaSP"></ValidationMessage>
    </div>

    <div class="form-group">
    <label for="status">Tình trạng hàng</label>
    <InputSelect id="status" class="form-control" @bind-Value="productCr.MaTinhTrang">
    <option> Chọn tình trạng hàng</option>
    @foreach (var item in TinhTrang)
    {
    <option value="@item.MaTinhTrang">@item.TenTinhTrang</option>
    }
    </InputSelect>
    <ValidationMessage For="()=>productCr.MaTinhTrang"></ValidationMessage>
    </div>

    <div class="form-group">
    <div class="form-control-file">
    <label for="image">Image</label>
    <InputFile id="image" OnChange="OnFileChange" @bind-Value="productCr.Image" class="form-control"></InputFile>
    <ValidationMessage For="()=>productCr.Image"></ValidationMessage>
    </div>
    </div>


    <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm> *@

    </div>


}

@code {

    public List<UserDto> Users;
    private List<LoaiDto> Loais;
    protected override async Task OnInitializedAsync()
    {
        Users = await UserService.GetUsers();
        Loais = await CategoryService.GetAll();

    }
    private ProductCreate productCr = new ProductCreate();

    private async Task SubmitProduct(EditContext context)
    {

        var result = await ProductService.CreateProduct(productCr);
        if (result)
        {
            ToastService.ShowSuccess($"{productCr.TenSP} has been created successfully.");
            NavigationManager.NavigateTo("/search");
        }
        else
        {
            ToastService.ShowError($"An error occurred in progress. Please contact to administrator.");
        }
    }
    private async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 300, 300);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        productCr.ImageURL = imageData;


    }

}


