// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechShop.API.Data;

#nullable disable

namespace TechShop.API.Migrations
{
    [DbContext(typeof(TechShopDbContext))]
    [Migration("20230918153641_update2")]
    partial class update2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechShop.API.Entities.BangTin", b =>
                {
                    b.Property<string>("MaBangTin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBangTin");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaSP")
                        .IsUnique()
                        .HasFilter("[MaSP] IS NOT NULL");

                    b.ToTable("BangTin");
                });

            modelBuilder.Entity("TechShop.API.Entities.GioHang", b =>
                {
                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("GiaBan")
                        .HasColumnType("bigint");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaKH", "MaSP");

                    b.HasIndex("MaSP");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("TechShop.API.Entities.HinhAnh", b =>
                {
                    b.Property<string>("MaHinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHinh");

                    b.HasIndex("MaSP");

                    b.ToTable("HinhAnh");
                });

            modelBuilder.Entity("TechShop.API.Entities.KhachHang", b =>
                {
                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HashPassed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("TechShop.API.Entities.LoaiSP", b =>
                {
                    b.Property<string>("MaLoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoai");

                    b.ToTable("LoaiSP");
                });

            modelBuilder.Entity("TechShop.API.Entities.NhanVien", b =>
                {
                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChiNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoaiNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashPasswdNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaQuyen")
                        .HasColumnType("int");

                    b.Property<string>("TenNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNV");

                    b.HasIndex("MaQuyen");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("TechShop.API.Entities.Quyen", b =>
                {
                    b.Property<int>("MaQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaQuyen"));

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaQuyen");

                    b.ToTable("Quyen");
                });

            modelBuilder.Entity("TechShop.API.Entities.SanPham", b =>
                {
                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("GiaSP")
                        .HasColumnType("bigint");

                    b.Property<string>("MaLoai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaTinhTrang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSP");

                    b.HasIndex("MaLoai");

                    b.HasIndex("MaTinhTrang");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("TechShop.API.Entities.TinhTrangHang", b =>
                {
                    b.Property<string>("MaTinhTrang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTinhTrang");

                    b.ToTable("TinhTrangHang");
                });

            modelBuilder.Entity("TechShop.API.Entities.BangTin", b =>
                {
                    b.HasOne("TechShop.API.Entities.KhachHang", "KhachHang")
                        .WithMany("BangTins")
                        .HasForeignKey("MaKH");

                    b.HasOne("TechShop.API.Entities.SanPham", "SanPham")
                        .WithOne("BangTin")
                        .HasForeignKey("TechShop.API.Entities.BangTin", "MaSP");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("TechShop.API.Entities.GioHang", b =>
                {
                    b.HasOne("TechShop.API.Entities.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechShop.API.Entities.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("TechShop.API.Entities.HinhAnh", b =>
                {
                    b.HasOne("TechShop.API.Entities.SanPham", "SanPham")
                        .WithMany("HinhAnhs")
                        .HasForeignKey("MaSP");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("TechShop.API.Entities.NhanVien", b =>
                {
                    b.HasOne("TechShop.API.Entities.Quyen", "Quyen")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaQuyen");

                    b.Navigation("Quyen");
                });

            modelBuilder.Entity("TechShop.API.Entities.SanPham", b =>
                {
                    b.HasOne("TechShop.API.Entities.LoaiSP", "LoaiSP")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaLoai");

                    b.HasOne("TechShop.API.Entities.TinhTrangHang", "TinhTrangHang")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaTinhTrang");

                    b.Navigation("LoaiSP");

                    b.Navigation("TinhTrangHang");
                });

            modelBuilder.Entity("TechShop.API.Entities.KhachHang", b =>
                {
                    b.Navigation("BangTins");
                });

            modelBuilder.Entity("TechShop.API.Entities.LoaiSP", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("TechShop.API.Entities.Quyen", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("TechShop.API.Entities.SanPham", b =>
                {
                    b.Navigation("BangTin")
                        .IsRequired();

                    b.Navigation("HinhAnhs");
                });

            modelBuilder.Entity("TechShop.API.Entities.TinhTrangHang", b =>
                {
                    b.Navigation("SanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
